/* ** GENEREATED FILE - DO NOT MODIFY ** */
package com.wilutions.mslib.office;
import com.wilutions.com.*;

/**
 * MsoEncoding.
 * 
 */
@SuppressWarnings("all")
@CoInterface(guid="{00000000-0000-0000-0000-000000000000}")
public class MsoEncoding implements ComEnum {
  static boolean __typelib__loaded = __TypeLib.load();

  // Typed constants
  public final static MsoEncoding msoEncodingThai = new MsoEncoding(874);
  public final static MsoEncoding msoEncodingJapaneseShiftJIS = new MsoEncoding(932);
  public final static MsoEncoding msoEncodingSimplifiedChineseGBK = new MsoEncoding(936);
  public final static MsoEncoding msoEncodingKorean = new MsoEncoding(949);
  public final static MsoEncoding msoEncodingTraditionalChineseBig5 = new MsoEncoding(950);
  public final static MsoEncoding msoEncodingUnicodeLittleEndian = new MsoEncoding(1200);
  public final static MsoEncoding msoEncodingUnicodeBigEndian = new MsoEncoding(1201);
  public final static MsoEncoding msoEncodingCentralEuropean = new MsoEncoding(1250);
  public final static MsoEncoding msoEncodingCyrillic = new MsoEncoding(1251);
  public final static MsoEncoding msoEncodingWestern = new MsoEncoding(1252);
  public final static MsoEncoding msoEncodingGreek = new MsoEncoding(1253);
  public final static MsoEncoding msoEncodingTurkish = new MsoEncoding(1254);
  public final static MsoEncoding msoEncodingHebrew = new MsoEncoding(1255);
  public final static MsoEncoding msoEncodingArabic = new MsoEncoding(1256);
  public final static MsoEncoding msoEncodingBaltic = new MsoEncoding(1257);
  public final static MsoEncoding msoEncodingVietnamese = new MsoEncoding(1258);
  public final static MsoEncoding msoEncodingAutoDetect = new MsoEncoding(50001);
  public final static MsoEncoding msoEncodingJapaneseAutoDetect = new MsoEncoding(50932);
  public final static MsoEncoding msoEncodingSimplifiedChineseAutoDetect = new MsoEncoding(50936);
  public final static MsoEncoding msoEncodingKoreanAutoDetect = new MsoEncoding(50949);
  public final static MsoEncoding msoEncodingTraditionalChineseAutoDetect = new MsoEncoding(50950);
  public final static MsoEncoding msoEncodingCyrillicAutoDetect = new MsoEncoding(51251);
  public final static MsoEncoding msoEncodingGreekAutoDetect = new MsoEncoding(51253);
  public final static MsoEncoding msoEncodingArabicAutoDetect = new MsoEncoding(51256);
  public final static MsoEncoding msoEncodingISO88591Latin1 = new MsoEncoding(28591);
  public final static MsoEncoding msoEncodingISO88592CentralEurope = new MsoEncoding(28592);
  public final static MsoEncoding msoEncodingISO88593Latin3 = new MsoEncoding(28593);
  public final static MsoEncoding msoEncodingISO88594Baltic = new MsoEncoding(28594);
  public final static MsoEncoding msoEncodingISO88595Cyrillic = new MsoEncoding(28595);
  public final static MsoEncoding msoEncodingISO88596Arabic = new MsoEncoding(28596);
  public final static MsoEncoding msoEncodingISO88597Greek = new MsoEncoding(28597);
  public final static MsoEncoding msoEncodingISO88598Hebrew = new MsoEncoding(28598);
  public final static MsoEncoding msoEncodingISO88599Turkish = new MsoEncoding(28599);
  public final static MsoEncoding msoEncodingISO885915Latin9 = new MsoEncoding(28605);
  public final static MsoEncoding msoEncodingISO88598HebrewLogical = new MsoEncoding(38598);
  public final static MsoEncoding msoEncodingISO2022JPNoHalfwidthKatakana = new MsoEncoding(50220);
  public final static MsoEncoding msoEncodingISO2022JPJISX02021984 = new MsoEncoding(50221);
  public final static MsoEncoding msoEncodingISO2022JPJISX02011989 = new MsoEncoding(50222);
  public final static MsoEncoding msoEncodingISO2022KR = new MsoEncoding(50225);
  public final static MsoEncoding msoEncodingISO2022CNTraditionalChinese = new MsoEncoding(50227);
  public final static MsoEncoding msoEncodingISO2022CNSimplifiedChinese = new MsoEncoding(50229);
  public final static MsoEncoding msoEncodingMacRoman = new MsoEncoding(10000);
  public final static MsoEncoding msoEncodingMacJapanese = new MsoEncoding(10001);
  public final static MsoEncoding msoEncodingMacTraditionalChineseBig5 = new MsoEncoding(10002);
  public final static MsoEncoding msoEncodingMacKorean = new MsoEncoding(10003);
  public final static MsoEncoding msoEncodingMacArabic = new MsoEncoding(10004);
  public final static MsoEncoding msoEncodingMacHebrew = new MsoEncoding(10005);
  public final static MsoEncoding msoEncodingMacGreek1 = new MsoEncoding(10006);
  public final static MsoEncoding msoEncodingMacCyrillic = new MsoEncoding(10007);
  public final static MsoEncoding msoEncodingMacSimplifiedChineseGB2312 = new MsoEncoding(10008);
  public final static MsoEncoding msoEncodingMacRomania = new MsoEncoding(10010);
  public final static MsoEncoding msoEncodingMacUkraine = new MsoEncoding(10017);
  public final static MsoEncoding msoEncodingMacLatin2 = new MsoEncoding(10029);
  public final static MsoEncoding msoEncodingMacIcelandic = new MsoEncoding(10079);
  public final static MsoEncoding msoEncodingMacTurkish = new MsoEncoding(10081);
  public final static MsoEncoding msoEncodingMacCroatia = new MsoEncoding(10082);
  public final static MsoEncoding msoEncodingEBCDICUSCanada = new MsoEncoding(37);
  public final static MsoEncoding msoEncodingEBCDICInternational = new MsoEncoding(500);
  public final static MsoEncoding msoEncodingEBCDICMultilingualROECELatin2 = new MsoEncoding(870);
  public final static MsoEncoding msoEncodingEBCDICGreekModern = new MsoEncoding(875);
  public final static MsoEncoding msoEncodingEBCDICTurkishLatin5 = new MsoEncoding(1026);
  public final static MsoEncoding msoEncodingEBCDICGermany = new MsoEncoding(20273);
  public final static MsoEncoding msoEncodingEBCDICDenmarkNorway = new MsoEncoding(20277);
  public final static MsoEncoding msoEncodingEBCDICFinlandSweden = new MsoEncoding(20278);
  public final static MsoEncoding msoEncodingEBCDICItaly = new MsoEncoding(20280);
  public final static MsoEncoding msoEncodingEBCDICLatinAmericaSpain = new MsoEncoding(20284);
  public final static MsoEncoding msoEncodingEBCDICUnitedKingdom = new MsoEncoding(20285);
  public final static MsoEncoding msoEncodingEBCDICJapaneseKatakanaExtended = new MsoEncoding(20290);
  public final static MsoEncoding msoEncodingEBCDICFrance = new MsoEncoding(20297);
  public final static MsoEncoding msoEncodingEBCDICArabic = new MsoEncoding(20420);
  public final static MsoEncoding msoEncodingEBCDICGreek = new MsoEncoding(20423);
  public final static MsoEncoding msoEncodingEBCDICHebrew = new MsoEncoding(20424);
  public final static MsoEncoding msoEncodingEBCDICKoreanExtended = new MsoEncoding(20833);
  public final static MsoEncoding msoEncodingEBCDICThai = new MsoEncoding(20838);
  public final static MsoEncoding msoEncodingEBCDICIcelandic = new MsoEncoding(20871);
  public final static MsoEncoding msoEncodingEBCDICTurkish = new MsoEncoding(20905);
  public final static MsoEncoding msoEncodingEBCDICRussian = new MsoEncoding(20880);
  public final static MsoEncoding msoEncodingEBCDICSerbianBulgarian = new MsoEncoding(21025);
  public final static MsoEncoding msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese = new MsoEncoding(50930);
  public final static MsoEncoding msoEncodingEBCDICUSCanadaAndJapanese = new MsoEncoding(50931);
  public final static MsoEncoding msoEncodingEBCDICKoreanExtendedAndKorean = new MsoEncoding(50933);
  public final static MsoEncoding msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese = new MsoEncoding(50935);
  public final static MsoEncoding msoEncodingEBCDICUSCanadaAndTraditionalChinese = new MsoEncoding(50937);
  public final static MsoEncoding msoEncodingEBCDICJapaneseLatinExtendedAndJapanese = new MsoEncoding(50939);
  public final static MsoEncoding msoEncodingOEMUnitedStates = new MsoEncoding(437);
  public final static MsoEncoding msoEncodingOEMGreek437G = new MsoEncoding(737);
  public final static MsoEncoding msoEncodingOEMBaltic = new MsoEncoding(775);
  public final static MsoEncoding msoEncodingOEMMultilingualLatinI = new MsoEncoding(850);
  public final static MsoEncoding msoEncodingOEMMultilingualLatinII = new MsoEncoding(852);
  public final static MsoEncoding msoEncodingOEMCyrillic = new MsoEncoding(855);
  public final static MsoEncoding msoEncodingOEMTurkish = new MsoEncoding(857);
  public final static MsoEncoding msoEncodingOEMPortuguese = new MsoEncoding(860);
  public final static MsoEncoding msoEncodingOEMIcelandic = new MsoEncoding(861);
  public final static MsoEncoding msoEncodingOEMHebrew = new MsoEncoding(862);
  public final static MsoEncoding msoEncodingOEMCanadianFrench = new MsoEncoding(863);
  public final static MsoEncoding msoEncodingOEMArabic = new MsoEncoding(864);
  public final static MsoEncoding msoEncodingOEMNordic = new MsoEncoding(865);
  public final static MsoEncoding msoEncodingOEMCyrillicII = new MsoEncoding(866);
  public final static MsoEncoding msoEncodingOEMModernGreek = new MsoEncoding(869);
  public final static MsoEncoding msoEncodingEUCJapanese = new MsoEncoding(51932);
  public final static MsoEncoding msoEncodingEUCChineseSimplifiedChinese = new MsoEncoding(51936);
  public final static MsoEncoding msoEncodingEUCKorean = new MsoEncoding(51949);
  public final static MsoEncoding msoEncodingEUCTaiwaneseTraditionalChinese = new MsoEncoding(51950);
  public final static MsoEncoding msoEncodingISCIIDevanagari = new MsoEncoding(57002);
  public final static MsoEncoding msoEncodingISCIIBengali = new MsoEncoding(57003);
  public final static MsoEncoding msoEncodingISCIITamil = new MsoEncoding(57004);
  public final static MsoEncoding msoEncodingISCIITelugu = new MsoEncoding(57005);
  public final static MsoEncoding msoEncodingISCIIAssamese = new MsoEncoding(57006);
  public final static MsoEncoding msoEncodingISCIIOriya = new MsoEncoding(57007);
  public final static MsoEncoding msoEncodingISCIIKannada = new MsoEncoding(57008);
  public final static MsoEncoding msoEncodingISCIIMalayalam = new MsoEncoding(57009);
  public final static MsoEncoding msoEncodingISCIIGujarati = new MsoEncoding(57010);
  public final static MsoEncoding msoEncodingISCIIPunjabi = new MsoEncoding(57011);
  public final static MsoEncoding msoEncodingArabicASMO = new MsoEncoding(708);
  public final static MsoEncoding msoEncodingArabicTransparentASMO = new MsoEncoding(720);
  public final static MsoEncoding msoEncodingKoreanJohab = new MsoEncoding(1361);
  public final static MsoEncoding msoEncodingTaiwanCNS = new MsoEncoding(20000);
  public final static MsoEncoding msoEncodingTaiwanTCA = new MsoEncoding(20001);
  public final static MsoEncoding msoEncodingTaiwanEten = new MsoEncoding(20002);
  public final static MsoEncoding msoEncodingTaiwanIBM5550 = new MsoEncoding(20003);
  public final static MsoEncoding msoEncodingTaiwanTeleText = new MsoEncoding(20004);
  public final static MsoEncoding msoEncodingTaiwanWang = new MsoEncoding(20005);
  public final static MsoEncoding msoEncodingIA5IRV = new MsoEncoding(20105);
  public final static MsoEncoding msoEncodingIA5German = new MsoEncoding(20106);
  public final static MsoEncoding msoEncodingIA5Swedish = new MsoEncoding(20107);
  public final static MsoEncoding msoEncodingIA5Norwegian = new MsoEncoding(20108);
  public final static MsoEncoding msoEncodingUSASCII = new MsoEncoding(20127);
  public final static MsoEncoding msoEncodingT61 = new MsoEncoding(20261);
  public final static MsoEncoding msoEncodingISO6937NonSpacingAccent = new MsoEncoding(20269);
  public final static MsoEncoding msoEncodingKOI8R = new MsoEncoding(20866);
  public final static MsoEncoding msoEncodingExtAlphaLowercase = new MsoEncoding(21027);
  public final static MsoEncoding msoEncodingKOI8U = new MsoEncoding(21866);
  public final static MsoEncoding msoEncodingEuropa3 = new MsoEncoding(29001);
  public final static MsoEncoding msoEncodingHZGBSimplifiedChinese = new MsoEncoding(52936);
  public final static MsoEncoding msoEncodingSimplifiedChineseGB18030 = new MsoEncoding(54936);
  public final static MsoEncoding msoEncodingUTF7 = new MsoEncoding(65000);
  public final static MsoEncoding msoEncodingUTF8 = new MsoEncoding(65001);

  // Integer constants for bitsets and switch statements
  public final static int _msoEncodingThai = 874;
  public final static int _msoEncodingJapaneseShiftJIS = 932;
  public final static int _msoEncodingSimplifiedChineseGBK = 936;
  public final static int _msoEncodingKorean = 949;
  public final static int _msoEncodingTraditionalChineseBig5 = 950;
  public final static int _msoEncodingUnicodeLittleEndian = 1200;
  public final static int _msoEncodingUnicodeBigEndian = 1201;
  public final static int _msoEncodingCentralEuropean = 1250;
  public final static int _msoEncodingCyrillic = 1251;
  public final static int _msoEncodingWestern = 1252;
  public final static int _msoEncodingGreek = 1253;
  public final static int _msoEncodingTurkish = 1254;
  public final static int _msoEncodingHebrew = 1255;
  public final static int _msoEncodingArabic = 1256;
  public final static int _msoEncodingBaltic = 1257;
  public final static int _msoEncodingVietnamese = 1258;
  public final static int _msoEncodingAutoDetect = 50001;
  public final static int _msoEncodingJapaneseAutoDetect = 50932;
  public final static int _msoEncodingSimplifiedChineseAutoDetect = 50936;
  public final static int _msoEncodingKoreanAutoDetect = 50949;
  public final static int _msoEncodingTraditionalChineseAutoDetect = 50950;
  public final static int _msoEncodingCyrillicAutoDetect = 51251;
  public final static int _msoEncodingGreekAutoDetect = 51253;
  public final static int _msoEncodingArabicAutoDetect = 51256;
  public final static int _msoEncodingISO88591Latin1 = 28591;
  public final static int _msoEncodingISO88592CentralEurope = 28592;
  public final static int _msoEncodingISO88593Latin3 = 28593;
  public final static int _msoEncodingISO88594Baltic = 28594;
  public final static int _msoEncodingISO88595Cyrillic = 28595;
  public final static int _msoEncodingISO88596Arabic = 28596;
  public final static int _msoEncodingISO88597Greek = 28597;
  public final static int _msoEncodingISO88598Hebrew = 28598;
  public final static int _msoEncodingISO88599Turkish = 28599;
  public final static int _msoEncodingISO885915Latin9 = 28605;
  public final static int _msoEncodingISO88598HebrewLogical = 38598;
  public final static int _msoEncodingISO2022JPNoHalfwidthKatakana = 50220;
  public final static int _msoEncodingISO2022JPJISX02021984 = 50221;
  public final static int _msoEncodingISO2022JPJISX02011989 = 50222;
  public final static int _msoEncodingISO2022KR = 50225;
  public final static int _msoEncodingISO2022CNTraditionalChinese = 50227;
  public final static int _msoEncodingISO2022CNSimplifiedChinese = 50229;
  public final static int _msoEncodingMacRoman = 10000;
  public final static int _msoEncodingMacJapanese = 10001;
  public final static int _msoEncodingMacTraditionalChineseBig5 = 10002;
  public final static int _msoEncodingMacKorean = 10003;
  public final static int _msoEncodingMacArabic = 10004;
  public final static int _msoEncodingMacHebrew = 10005;
  public final static int _msoEncodingMacGreek1 = 10006;
  public final static int _msoEncodingMacCyrillic = 10007;
  public final static int _msoEncodingMacSimplifiedChineseGB2312 = 10008;
  public final static int _msoEncodingMacRomania = 10010;
  public final static int _msoEncodingMacUkraine = 10017;
  public final static int _msoEncodingMacLatin2 = 10029;
  public final static int _msoEncodingMacIcelandic = 10079;
  public final static int _msoEncodingMacTurkish = 10081;
  public final static int _msoEncodingMacCroatia = 10082;
  public final static int _msoEncodingEBCDICUSCanada = 37;
  public final static int _msoEncodingEBCDICInternational = 500;
  public final static int _msoEncodingEBCDICMultilingualROECELatin2 = 870;
  public final static int _msoEncodingEBCDICGreekModern = 875;
  public final static int _msoEncodingEBCDICTurkishLatin5 = 1026;
  public final static int _msoEncodingEBCDICGermany = 20273;
  public final static int _msoEncodingEBCDICDenmarkNorway = 20277;
  public final static int _msoEncodingEBCDICFinlandSweden = 20278;
  public final static int _msoEncodingEBCDICItaly = 20280;
  public final static int _msoEncodingEBCDICLatinAmericaSpain = 20284;
  public final static int _msoEncodingEBCDICUnitedKingdom = 20285;
  public final static int _msoEncodingEBCDICJapaneseKatakanaExtended = 20290;
  public final static int _msoEncodingEBCDICFrance = 20297;
  public final static int _msoEncodingEBCDICArabic = 20420;
  public final static int _msoEncodingEBCDICGreek = 20423;
  public final static int _msoEncodingEBCDICHebrew = 20424;
  public final static int _msoEncodingEBCDICKoreanExtended = 20833;
  public final static int _msoEncodingEBCDICThai = 20838;
  public final static int _msoEncodingEBCDICIcelandic = 20871;
  public final static int _msoEncodingEBCDICTurkish = 20905;
  public final static int _msoEncodingEBCDICRussian = 20880;
  public final static int _msoEncodingEBCDICSerbianBulgarian = 21025;
  public final static int _msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese = 50930;
  public final static int _msoEncodingEBCDICUSCanadaAndJapanese = 50931;
  public final static int _msoEncodingEBCDICKoreanExtendedAndKorean = 50933;
  public final static int _msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese = 50935;
  public final static int _msoEncodingEBCDICUSCanadaAndTraditionalChinese = 50937;
  public final static int _msoEncodingEBCDICJapaneseLatinExtendedAndJapanese = 50939;
  public final static int _msoEncodingOEMUnitedStates = 437;
  public final static int _msoEncodingOEMGreek437G = 737;
  public final static int _msoEncodingOEMBaltic = 775;
  public final static int _msoEncodingOEMMultilingualLatinI = 850;
  public final static int _msoEncodingOEMMultilingualLatinII = 852;
  public final static int _msoEncodingOEMCyrillic = 855;
  public final static int _msoEncodingOEMTurkish = 857;
  public final static int _msoEncodingOEMPortuguese = 860;
  public final static int _msoEncodingOEMIcelandic = 861;
  public final static int _msoEncodingOEMHebrew = 862;
  public final static int _msoEncodingOEMCanadianFrench = 863;
  public final static int _msoEncodingOEMArabic = 864;
  public final static int _msoEncodingOEMNordic = 865;
  public final static int _msoEncodingOEMCyrillicII = 866;
  public final static int _msoEncodingOEMModernGreek = 869;
  public final static int _msoEncodingEUCJapanese = 51932;
  public final static int _msoEncodingEUCChineseSimplifiedChinese = 51936;
  public final static int _msoEncodingEUCKorean = 51949;
  public final static int _msoEncodingEUCTaiwaneseTraditionalChinese = 51950;
  public final static int _msoEncodingISCIIDevanagari = 57002;
  public final static int _msoEncodingISCIIBengali = 57003;
  public final static int _msoEncodingISCIITamil = 57004;
  public final static int _msoEncodingISCIITelugu = 57005;
  public final static int _msoEncodingISCIIAssamese = 57006;
  public final static int _msoEncodingISCIIOriya = 57007;
  public final static int _msoEncodingISCIIKannada = 57008;
  public final static int _msoEncodingISCIIMalayalam = 57009;
  public final static int _msoEncodingISCIIGujarati = 57010;
  public final static int _msoEncodingISCIIPunjabi = 57011;
  public final static int _msoEncodingArabicASMO = 708;
  public final static int _msoEncodingArabicTransparentASMO = 720;
  public final static int _msoEncodingKoreanJohab = 1361;
  public final static int _msoEncodingTaiwanCNS = 20000;
  public final static int _msoEncodingTaiwanTCA = 20001;
  public final static int _msoEncodingTaiwanEten = 20002;
  public final static int _msoEncodingTaiwanIBM5550 = 20003;
  public final static int _msoEncodingTaiwanTeleText = 20004;
  public final static int _msoEncodingTaiwanWang = 20005;
  public final static int _msoEncodingIA5IRV = 20105;
  public final static int _msoEncodingIA5German = 20106;
  public final static int _msoEncodingIA5Swedish = 20107;
  public final static int _msoEncodingIA5Norwegian = 20108;
  public final static int _msoEncodingUSASCII = 20127;
  public final static int _msoEncodingT61 = 20261;
  public final static int _msoEncodingISO6937NonSpacingAccent = 20269;
  public final static int _msoEncodingKOI8R = 20866;
  public final static int _msoEncodingExtAlphaLowercase = 21027;
  public final static int _msoEncodingKOI8U = 21866;
  public final static int _msoEncodingEuropa3 = 29001;
  public final static int _msoEncodingHZGBSimplifiedChinese = 52936;
  public final static int _msoEncodingSimplifiedChineseGB18030 = 54936;
  public final static int _msoEncodingUTF7 = 65000;
  public final static int _msoEncodingUTF8 = 65001;

  // Value, readonly field.
  public final int value;

  // Private constructor, use valueOf to create an instance.
  private MsoEncoding(int value) { this.value = value; }

  // Return one of the predefined typed constants for the given value or create a new object.
  public static  MsoEncoding valueOf(int value) {
    switch(value) {
    case 874: return msoEncodingThai;
    case 932: return msoEncodingJapaneseShiftJIS;
    case 936: return msoEncodingSimplifiedChineseGBK;
    case 949: return msoEncodingKorean;
    case 950: return msoEncodingTraditionalChineseBig5;
    case 1200: return msoEncodingUnicodeLittleEndian;
    case 1201: return msoEncodingUnicodeBigEndian;
    case 1250: return msoEncodingCentralEuropean;
    case 1251: return msoEncodingCyrillic;
    case 1252: return msoEncodingWestern;
    case 1253: return msoEncodingGreek;
    case 1254: return msoEncodingTurkish;
    case 1255: return msoEncodingHebrew;
    case 1256: return msoEncodingArabic;
    case 1257: return msoEncodingBaltic;
    case 1258: return msoEncodingVietnamese;
    case 50001: return msoEncodingAutoDetect;
    case 50932: return msoEncodingJapaneseAutoDetect;
    case 50936: return msoEncodingSimplifiedChineseAutoDetect;
    case 50949: return msoEncodingKoreanAutoDetect;
    case 50950: return msoEncodingTraditionalChineseAutoDetect;
    case 51251: return msoEncodingCyrillicAutoDetect;
    case 51253: return msoEncodingGreekAutoDetect;
    case 51256: return msoEncodingArabicAutoDetect;
    case 28591: return msoEncodingISO88591Latin1;
    case 28592: return msoEncodingISO88592CentralEurope;
    case 28593: return msoEncodingISO88593Latin3;
    case 28594: return msoEncodingISO88594Baltic;
    case 28595: return msoEncodingISO88595Cyrillic;
    case 28596: return msoEncodingISO88596Arabic;
    case 28597: return msoEncodingISO88597Greek;
    case 28598: return msoEncodingISO88598Hebrew;
    case 28599: return msoEncodingISO88599Turkish;
    case 28605: return msoEncodingISO885915Latin9;
    case 38598: return msoEncodingISO88598HebrewLogical;
    case 50220: return msoEncodingISO2022JPNoHalfwidthKatakana;
    case 50221: return msoEncodingISO2022JPJISX02021984;
    case 50222: return msoEncodingISO2022JPJISX02011989;
    case 50225: return msoEncodingISO2022KR;
    case 50227: return msoEncodingISO2022CNTraditionalChinese;
    case 50229: return msoEncodingISO2022CNSimplifiedChinese;
    case 10000: return msoEncodingMacRoman;
    case 10001: return msoEncodingMacJapanese;
    case 10002: return msoEncodingMacTraditionalChineseBig5;
    case 10003: return msoEncodingMacKorean;
    case 10004: return msoEncodingMacArabic;
    case 10005: return msoEncodingMacHebrew;
    case 10006: return msoEncodingMacGreek1;
    case 10007: return msoEncodingMacCyrillic;
    case 10008: return msoEncodingMacSimplifiedChineseGB2312;
    case 10010: return msoEncodingMacRomania;
    case 10017: return msoEncodingMacUkraine;
    case 10029: return msoEncodingMacLatin2;
    case 10079: return msoEncodingMacIcelandic;
    case 10081: return msoEncodingMacTurkish;
    case 10082: return msoEncodingMacCroatia;
    case 37: return msoEncodingEBCDICUSCanada;
    case 500: return msoEncodingEBCDICInternational;
    case 870: return msoEncodingEBCDICMultilingualROECELatin2;
    case 875: return msoEncodingEBCDICGreekModern;
    case 1026: return msoEncodingEBCDICTurkishLatin5;
    case 20273: return msoEncodingEBCDICGermany;
    case 20277: return msoEncodingEBCDICDenmarkNorway;
    case 20278: return msoEncodingEBCDICFinlandSweden;
    case 20280: return msoEncodingEBCDICItaly;
    case 20284: return msoEncodingEBCDICLatinAmericaSpain;
    case 20285: return msoEncodingEBCDICUnitedKingdom;
    case 20290: return msoEncodingEBCDICJapaneseKatakanaExtended;
    case 20297: return msoEncodingEBCDICFrance;
    case 20420: return msoEncodingEBCDICArabic;
    case 20423: return msoEncodingEBCDICGreek;
    case 20424: return msoEncodingEBCDICHebrew;
    case 20833: return msoEncodingEBCDICKoreanExtended;
    case 20838: return msoEncodingEBCDICThai;
    case 20871: return msoEncodingEBCDICIcelandic;
    case 20905: return msoEncodingEBCDICTurkish;
    case 20880: return msoEncodingEBCDICRussian;
    case 21025: return msoEncodingEBCDICSerbianBulgarian;
    case 50930: return msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese;
    case 50931: return msoEncodingEBCDICUSCanadaAndJapanese;
    case 50933: return msoEncodingEBCDICKoreanExtendedAndKorean;
    case 50935: return msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese;
    case 50937: return msoEncodingEBCDICUSCanadaAndTraditionalChinese;
    case 50939: return msoEncodingEBCDICJapaneseLatinExtendedAndJapanese;
    case 437: return msoEncodingOEMUnitedStates;
    case 737: return msoEncodingOEMGreek437G;
    case 775: return msoEncodingOEMBaltic;
    case 850: return msoEncodingOEMMultilingualLatinI;
    case 852: return msoEncodingOEMMultilingualLatinII;
    case 855: return msoEncodingOEMCyrillic;
    case 857: return msoEncodingOEMTurkish;
    case 860: return msoEncodingOEMPortuguese;
    case 861: return msoEncodingOEMIcelandic;
    case 862: return msoEncodingOEMHebrew;
    case 863: return msoEncodingOEMCanadianFrench;
    case 864: return msoEncodingOEMArabic;
    case 865: return msoEncodingOEMNordic;
    case 866: return msoEncodingOEMCyrillicII;
    case 869: return msoEncodingOEMModernGreek;
    case 51932: return msoEncodingEUCJapanese;
    case 51936: return msoEncodingEUCChineseSimplifiedChinese;
    case 51949: return msoEncodingEUCKorean;
    case 51950: return msoEncodingEUCTaiwaneseTraditionalChinese;
    case 57002: return msoEncodingISCIIDevanagari;
    case 57003: return msoEncodingISCIIBengali;
    case 57004: return msoEncodingISCIITamil;
    case 57005: return msoEncodingISCIITelugu;
    case 57006: return msoEncodingISCIIAssamese;
    case 57007: return msoEncodingISCIIOriya;
    case 57008: return msoEncodingISCIIKannada;
    case 57009: return msoEncodingISCIIMalayalam;
    case 57010: return msoEncodingISCIIGujarati;
    case 57011: return msoEncodingISCIIPunjabi;
    case 708: return msoEncodingArabicASMO;
    case 720: return msoEncodingArabicTransparentASMO;
    case 1361: return msoEncodingKoreanJohab;
    case 20000: return msoEncodingTaiwanCNS;
    case 20001: return msoEncodingTaiwanTCA;
    case 20002: return msoEncodingTaiwanEten;
    case 20003: return msoEncodingTaiwanIBM5550;
    case 20004: return msoEncodingTaiwanTeleText;
    case 20005: return msoEncodingTaiwanWang;
    case 20105: return msoEncodingIA5IRV;
    case 20106: return msoEncodingIA5German;
    case 20107: return msoEncodingIA5Swedish;
    case 20108: return msoEncodingIA5Norwegian;
    case 20127: return msoEncodingUSASCII;
    case 20261: return msoEncodingT61;
    case 20269: return msoEncodingISO6937NonSpacingAccent;
    case 20866: return msoEncodingKOI8R;
    case 21027: return msoEncodingExtAlphaLowercase;
    case 21866: return msoEncodingKOI8U;
    case 29001: return msoEncodingEuropa3;
    case 52936: return msoEncodingHZGBSimplifiedChinese;
    case 54936: return msoEncodingSimplifiedChineseGB18030;
    case 65000: return msoEncodingUTF7;
    case 65001: return msoEncodingUTF8;
    default: return new MsoEncoding(value);
    }
  }

  public String toString() {
    switch(value) {
    case 1252: return "msoEncodingWestern";
    case 1201: return "msoEncodingUnicodeBigEndian";
    case 874: return "msoEncodingThai";
    case 1251: return "msoEncodingCyrillic";
    case 28595: return "msoEncodingISO88595Cyrillic";
    case 932: return "msoEncodingJapaneseShiftJIS";
    case 950: return "msoEncodingTraditionalChineseBig5";
    case 50949: return "msoEncodingKoreanAutoDetect";
    case 28599: return "msoEncodingISO88599Turkish";
    case 1361: return "msoEncodingKoreanJohab";
    case 936: return "msoEncodingSimplifiedChineseGBK";
    case 1253: return "msoEncodingGreek";
    case 857: return "msoEncodingOEMTurkish";
    case 1200: return "msoEncodingUnicodeLittleEndian";
    case 949: return "msoEncodingKorean";
    case 20278: return "msoEncodingEBCDICFinlandSweden";
    case 10003: return "msoEncodingMacKorean";
    case 28597: return "msoEncodingISO88597Greek";
    case 50950: return "msoEncodingTraditionalChineseAutoDetect";
    case 10017: return "msoEncodingMacUkraine";
    case 50225: return "msoEncodingISO2022KR";
    case 1250: return "msoEncodingCentralEuropean";
    case 50221: return "msoEncodingISO2022JPJISX02021984";
    case 20105: return "msoEncodingIA5IRV";
    case 1254: return "msoEncodingTurkish";
    case 1255: return "msoEncodingHebrew";
    case 10001: return "msoEncodingMacJapanese";
    case 28591: return "msoEncodingISO88591Latin1";
    case 20107: return "msoEncodingIA5Swedish";
    case 50937: return "msoEncodingEBCDICUSCanadaAndTraditionalChinese";
    case 1256: return "msoEncodingArabic";
    case 10007: return "msoEncodingMacCyrillic";
    case 1257: return "msoEncodingBaltic";
    case 1258: return "msoEncodingVietnamese";
    case 20277: return "msoEncodingEBCDICDenmarkNorway";
    case 10079: return "msoEncodingMacIcelandic";
    case 861: return "msoEncodingOEMIcelandic";
    case 50001: return "msoEncodingAutoDetect";
    case 10010: return "msoEncodingMacRomania";
    case 50932: return "msoEncodingJapaneseAutoDetect";
    case 20003: return "msoEncodingTaiwanIBM5550";
    case 875: return "msoEncodingEBCDICGreekModern";
    case 50936: return "msoEncodingSimplifiedChineseAutoDetect";
    case 51251: return "msoEncodingCyrillicAutoDetect";
    case 51253: return "msoEncodingGreekAutoDetect";
    case 51256: return "msoEncodingArabicAutoDetect";
    case 10006: return "msoEncodingMacGreek1";
    case 28592: return "msoEncodingISO88592CentralEurope";
    case 28593: return "msoEncodingISO88593Latin3";
    case 28594: return "msoEncodingISO88594Baltic";
    case 10082: return "msoEncodingMacCroatia";
    case 28596: return "msoEncodingISO88596Arabic";
    case 20273: return "msoEncodingEBCDICGermany";
    case 10008: return "msoEncodingMacSimplifiedChineseGB2312";
    case 28598: return "msoEncodingISO88598Hebrew";
    case 28605: return "msoEncodingISO885915Latin9";
    case 863: return "msoEncodingOEMCanadianFrench";
    case 500: return "msoEncodingEBCDICInternational";
    case 38598: return "msoEncodingISO88598HebrewLogical";
    case 50220: return "msoEncodingISO2022JPNoHalfwidthKatakana";
    case 50222: return "msoEncodingISO2022JPJISX02011989";
    case 1026: return "msoEncodingEBCDICTurkishLatin5";
    case 50227: return "msoEncodingISO2022CNTraditionalChinese";
    case 50229: return "msoEncodingISO2022CNSimplifiedChinese";
    case 10000: return "msoEncodingMacRoman";
    case 10002: return "msoEncodingMacTraditionalChineseBig5";
    case 708: return "msoEncodingArabicASMO";
    case 21025: return "msoEncodingEBCDICSerbianBulgarian";
    case 10004: return "msoEncodingMacArabic";
    case 10005: return "msoEncodingMacHebrew";
    case 10029: return "msoEncodingMacLatin2";
    case 10081: return "msoEncodingMacTurkish";
    case 57007: return "msoEncodingISCIIOriya";
    case 37: return "msoEncodingEBCDICUSCanada";
    case 870: return "msoEncodingEBCDICMultilingualROECELatin2";
    case 20280: return "msoEncodingEBCDICItaly";
    case 20284: return "msoEncodingEBCDICLatinAmericaSpain";
    case 20285: return "msoEncodingEBCDICUnitedKingdom";
    case 20838: return "msoEncodingEBCDICThai";
    case 20290: return "msoEncodingEBCDICJapaneseKatakanaExtended";
    case 20297: return "msoEncodingEBCDICFrance";
    case 20420: return "msoEncodingEBCDICArabic";
    case 20269: return "msoEncodingISO6937NonSpacingAccent";
    case 20423: return "msoEncodingEBCDICGreek";
    case 20424: return "msoEncodingEBCDICHebrew";
    case 54936: return "msoEncodingSimplifiedChineseGB18030";
    case 20833: return "msoEncodingEBCDICKoreanExtended";
    case 20871: return "msoEncodingEBCDICIcelandic";
    case 20905: return "msoEncodingEBCDICTurkish";
    case 20880: return "msoEncodingEBCDICRussian";
    case 50930: return "msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese";
    case 50931: return "msoEncodingEBCDICUSCanadaAndJapanese";
    case 50933: return "msoEncodingEBCDICKoreanExtendedAndKorean";
    case 50935: return "msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese";
    case 50939: return "msoEncodingEBCDICJapaneseLatinExtendedAndJapanese";
    case 437: return "msoEncodingOEMUnitedStates";
    case 737: return "msoEncodingOEMGreek437G";
    case 775: return "msoEncodingOEMBaltic";
    case 850: return "msoEncodingOEMMultilingualLatinI";
    case 852: return "msoEncodingOEMMultilingualLatinII";
    case 855: return "msoEncodingOEMCyrillic";
    case 51949: return "msoEncodingEUCKorean";
    case 860: return "msoEncodingOEMPortuguese";
    case 862: return "msoEncodingOEMHebrew";
    case 20261: return "msoEncodingT61";
    case 864: return "msoEncodingOEMArabic";
    case 865: return "msoEncodingOEMNordic";
    case 866: return "msoEncodingOEMCyrillicII";
    case 869: return "msoEncodingOEMModernGreek";
    case 51932: return "msoEncodingEUCJapanese";
    case 51936: return "msoEncodingEUCChineseSimplifiedChinese";
    case 51950: return "msoEncodingEUCTaiwaneseTraditionalChinese";
    case 57002: return "msoEncodingISCIIDevanagari";
    case 57003: return "msoEncodingISCIIBengali";
    case 57004: return "msoEncodingISCIITamil";
    case 57005: return "msoEncodingISCIITelugu";
    case 57006: return "msoEncodingISCIIAssamese";
    case 57008: return "msoEncodingISCIIKannada";
    case 57009: return "msoEncodingISCIIMalayalam";
    case 57010: return "msoEncodingISCIIGujarati";
    case 57011: return "msoEncodingISCIIPunjabi";
    case 720: return "msoEncodingArabicTransparentASMO";
    case 20000: return "msoEncodingTaiwanCNS";
    case 20001: return "msoEncodingTaiwanTCA";
    case 20002: return "msoEncodingTaiwanEten";
    case 20004: return "msoEncodingTaiwanTeleText";
    case 20005: return "msoEncodingTaiwanWang";
    case 20106: return "msoEncodingIA5German";
    case 20108: return "msoEncodingIA5Norwegian";
    case 20127: return "msoEncodingUSASCII";
    case 20866: return "msoEncodingKOI8R";
    case 21027: return "msoEncodingExtAlphaLowercase";
    case 21866: return "msoEncodingKOI8U";
    case 29001: return "msoEncodingEuropa3";
    case 52936: return "msoEncodingHZGBSimplifiedChinese";
    case 65000: return "msoEncodingUTF7";
    case 65001: return "msoEncodingUTF8";
    default: {
      StringBuilder sbuf = new StringBuilder();
      sbuf.append("[").append(value).append("=");
      if ((value & 1252) != 0) sbuf.append("|msoEncodingWestern");
      if ((value & 1201) != 0) sbuf.append("|msoEncodingUnicodeBigEndian");
      if ((value & 874) != 0) sbuf.append("|msoEncodingThai");
      if ((value & 1251) != 0) sbuf.append("|msoEncodingCyrillic");
      if ((value & 28595) != 0) sbuf.append("|msoEncodingISO88595Cyrillic");
      if ((value & 932) != 0) sbuf.append("|msoEncodingJapaneseShiftJIS");
      if ((value & 950) != 0) sbuf.append("|msoEncodingTraditionalChineseBig5");
      if ((value & 50949) != 0) sbuf.append("|msoEncodingKoreanAutoDetect");
      if ((value & 28599) != 0) sbuf.append("|msoEncodingISO88599Turkish");
      if ((value & 1361) != 0) sbuf.append("|msoEncodingKoreanJohab");
      if ((value & 936) != 0) sbuf.append("|msoEncodingSimplifiedChineseGBK");
      if ((value & 1253) != 0) sbuf.append("|msoEncodingGreek");
      if ((value & 857) != 0) sbuf.append("|msoEncodingOEMTurkish");
      if ((value & 1200) != 0) sbuf.append("|msoEncodingUnicodeLittleEndian");
      if ((value & 949) != 0) sbuf.append("|msoEncodingKorean");
      if ((value & 20278) != 0) sbuf.append("|msoEncodingEBCDICFinlandSweden");
      if ((value & 10003) != 0) sbuf.append("|msoEncodingMacKorean");
      if ((value & 28597) != 0) sbuf.append("|msoEncodingISO88597Greek");
      if ((value & 50950) != 0) sbuf.append("|msoEncodingTraditionalChineseAutoDetect");
      if ((value & 10017) != 0) sbuf.append("|msoEncodingMacUkraine");
      if ((value & 50225) != 0) sbuf.append("|msoEncodingISO2022KR");
      if ((value & 1250) != 0) sbuf.append("|msoEncodingCentralEuropean");
      if ((value & 50221) != 0) sbuf.append("|msoEncodingISO2022JPJISX02021984");
      if ((value & 20105) != 0) sbuf.append("|msoEncodingIA5IRV");
      if ((value & 1254) != 0) sbuf.append("|msoEncodingTurkish");
      if ((value & 1255) != 0) sbuf.append("|msoEncodingHebrew");
      if ((value & 10001) != 0) sbuf.append("|msoEncodingMacJapanese");
      if ((value & 28591) != 0) sbuf.append("|msoEncodingISO88591Latin1");
      if ((value & 20107) != 0) sbuf.append("|msoEncodingIA5Swedish");
      if ((value & 50937) != 0) sbuf.append("|msoEncodingEBCDICUSCanadaAndTraditionalChinese");
      if ((value & 1256) != 0) sbuf.append("|msoEncodingArabic");
      if ((value & 10007) != 0) sbuf.append("|msoEncodingMacCyrillic");
      if ((value & 1257) != 0) sbuf.append("|msoEncodingBaltic");
      if ((value & 1258) != 0) sbuf.append("|msoEncodingVietnamese");
      if ((value & 20277) != 0) sbuf.append("|msoEncodingEBCDICDenmarkNorway");
      if ((value & 10079) != 0) sbuf.append("|msoEncodingMacIcelandic");
      if ((value & 861) != 0) sbuf.append("|msoEncodingOEMIcelandic");
      if ((value & 50001) != 0) sbuf.append("|msoEncodingAutoDetect");
      if ((value & 10010) != 0) sbuf.append("|msoEncodingMacRomania");
      if ((value & 50932) != 0) sbuf.append("|msoEncodingJapaneseAutoDetect");
      if ((value & 20003) != 0) sbuf.append("|msoEncodingTaiwanIBM5550");
      if ((value & 875) != 0) sbuf.append("|msoEncodingEBCDICGreekModern");
      if ((value & 50936) != 0) sbuf.append("|msoEncodingSimplifiedChineseAutoDetect");
      if ((value & 51251) != 0) sbuf.append("|msoEncodingCyrillicAutoDetect");
      if ((value & 51253) != 0) sbuf.append("|msoEncodingGreekAutoDetect");
      if ((value & 51256) != 0) sbuf.append("|msoEncodingArabicAutoDetect");
      if ((value & 10006) != 0) sbuf.append("|msoEncodingMacGreek1");
      if ((value & 28592) != 0) sbuf.append("|msoEncodingISO88592CentralEurope");
      if ((value & 28593) != 0) sbuf.append("|msoEncodingISO88593Latin3");
      if ((value & 28594) != 0) sbuf.append("|msoEncodingISO88594Baltic");
      if ((value & 10082) != 0) sbuf.append("|msoEncodingMacCroatia");
      if ((value & 28596) != 0) sbuf.append("|msoEncodingISO88596Arabic");
      if ((value & 20273) != 0) sbuf.append("|msoEncodingEBCDICGermany");
      if ((value & 10008) != 0) sbuf.append("|msoEncodingMacSimplifiedChineseGB2312");
      if ((value & 28598) != 0) sbuf.append("|msoEncodingISO88598Hebrew");
      if ((value & 28605) != 0) sbuf.append("|msoEncodingISO885915Latin9");
      if ((value & 863) != 0) sbuf.append("|msoEncodingOEMCanadianFrench");
      if ((value & 500) != 0) sbuf.append("|msoEncodingEBCDICInternational");
      if ((value & 38598) != 0) sbuf.append("|msoEncodingISO88598HebrewLogical");
      if ((value & 50220) != 0) sbuf.append("|msoEncodingISO2022JPNoHalfwidthKatakana");
      if ((value & 50222) != 0) sbuf.append("|msoEncodingISO2022JPJISX02011989");
      if ((value & 1026) != 0) sbuf.append("|msoEncodingEBCDICTurkishLatin5");
      if ((value & 50227) != 0) sbuf.append("|msoEncodingISO2022CNTraditionalChinese");
      if ((value & 50229) != 0) sbuf.append("|msoEncodingISO2022CNSimplifiedChinese");
      if ((value & 10000) != 0) sbuf.append("|msoEncodingMacRoman");
      if ((value & 10002) != 0) sbuf.append("|msoEncodingMacTraditionalChineseBig5");
      if ((value & 708) != 0) sbuf.append("|msoEncodingArabicASMO");
      if ((value & 21025) != 0) sbuf.append("|msoEncodingEBCDICSerbianBulgarian");
      if ((value & 10004) != 0) sbuf.append("|msoEncodingMacArabic");
      if ((value & 10005) != 0) sbuf.append("|msoEncodingMacHebrew");
      if ((value & 10029) != 0) sbuf.append("|msoEncodingMacLatin2");
      if ((value & 10081) != 0) sbuf.append("|msoEncodingMacTurkish");
      if ((value & 57007) != 0) sbuf.append("|msoEncodingISCIIOriya");
      if ((value & 37) != 0) sbuf.append("|msoEncodingEBCDICUSCanada");
      if ((value & 870) != 0) sbuf.append("|msoEncodingEBCDICMultilingualROECELatin2");
      if ((value & 20280) != 0) sbuf.append("|msoEncodingEBCDICItaly");
      if ((value & 20284) != 0) sbuf.append("|msoEncodingEBCDICLatinAmericaSpain");
      if ((value & 20285) != 0) sbuf.append("|msoEncodingEBCDICUnitedKingdom");
      if ((value & 20838) != 0) sbuf.append("|msoEncodingEBCDICThai");
      if ((value & 20290) != 0) sbuf.append("|msoEncodingEBCDICJapaneseKatakanaExtended");
      if ((value & 20297) != 0) sbuf.append("|msoEncodingEBCDICFrance");
      if ((value & 20420) != 0) sbuf.append("|msoEncodingEBCDICArabic");
      if ((value & 20269) != 0) sbuf.append("|msoEncodingISO6937NonSpacingAccent");
      if ((value & 20423) != 0) sbuf.append("|msoEncodingEBCDICGreek");
      if ((value & 20424) != 0) sbuf.append("|msoEncodingEBCDICHebrew");
      if ((value & 54936) != 0) sbuf.append("|msoEncodingSimplifiedChineseGB18030");
      if ((value & 20833) != 0) sbuf.append("|msoEncodingEBCDICKoreanExtended");
      if ((value & 20871) != 0) sbuf.append("|msoEncodingEBCDICIcelandic");
      if ((value & 20905) != 0) sbuf.append("|msoEncodingEBCDICTurkish");
      if ((value & 20880) != 0) sbuf.append("|msoEncodingEBCDICRussian");
      if ((value & 50930) != 0) sbuf.append("|msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese");
      if ((value & 50931) != 0) sbuf.append("|msoEncodingEBCDICUSCanadaAndJapanese");
      if ((value & 50933) != 0) sbuf.append("|msoEncodingEBCDICKoreanExtendedAndKorean");
      if ((value & 50935) != 0) sbuf.append("|msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese");
      if ((value & 50939) != 0) sbuf.append("|msoEncodingEBCDICJapaneseLatinExtendedAndJapanese");
      if ((value & 437) != 0) sbuf.append("|msoEncodingOEMUnitedStates");
      if ((value & 737) != 0) sbuf.append("|msoEncodingOEMGreek437G");
      if ((value & 775) != 0) sbuf.append("|msoEncodingOEMBaltic");
      if ((value & 850) != 0) sbuf.append("|msoEncodingOEMMultilingualLatinI");
      if ((value & 852) != 0) sbuf.append("|msoEncodingOEMMultilingualLatinII");
      if ((value & 855) != 0) sbuf.append("|msoEncodingOEMCyrillic");
      if ((value & 51949) != 0) sbuf.append("|msoEncodingEUCKorean");
      if ((value & 860) != 0) sbuf.append("|msoEncodingOEMPortuguese");
      if ((value & 862) != 0) sbuf.append("|msoEncodingOEMHebrew");
      if ((value & 20261) != 0) sbuf.append("|msoEncodingT61");
      if ((value & 864) != 0) sbuf.append("|msoEncodingOEMArabic");
      if ((value & 865) != 0) sbuf.append("|msoEncodingOEMNordic");
      if ((value & 866) != 0) sbuf.append("|msoEncodingOEMCyrillicII");
      if ((value & 869) != 0) sbuf.append("|msoEncodingOEMModernGreek");
      if ((value & 51932) != 0) sbuf.append("|msoEncodingEUCJapanese");
      if ((value & 51936) != 0) sbuf.append("|msoEncodingEUCChineseSimplifiedChinese");
      if ((value & 51950) != 0) sbuf.append("|msoEncodingEUCTaiwaneseTraditionalChinese");
      if ((value & 57002) != 0) sbuf.append("|msoEncodingISCIIDevanagari");
      if ((value & 57003) != 0) sbuf.append("|msoEncodingISCIIBengali");
      if ((value & 57004) != 0) sbuf.append("|msoEncodingISCIITamil");
      if ((value & 57005) != 0) sbuf.append("|msoEncodingISCIITelugu");
      if ((value & 57006) != 0) sbuf.append("|msoEncodingISCIIAssamese");
      if ((value & 57008) != 0) sbuf.append("|msoEncodingISCIIKannada");
      if ((value & 57009) != 0) sbuf.append("|msoEncodingISCIIMalayalam");
      if ((value & 57010) != 0) sbuf.append("|msoEncodingISCIIGujarati");
      if ((value & 57011) != 0) sbuf.append("|msoEncodingISCIIPunjabi");
      if ((value & 720) != 0) sbuf.append("|msoEncodingArabicTransparentASMO");
      if ((value & 20000) != 0) sbuf.append("|msoEncodingTaiwanCNS");
      if ((value & 20001) != 0) sbuf.append("|msoEncodingTaiwanTCA");
      if ((value & 20002) != 0) sbuf.append("|msoEncodingTaiwanEten");
      if ((value & 20004) != 0) sbuf.append("|msoEncodingTaiwanTeleText");
      if ((value & 20005) != 0) sbuf.append("|msoEncodingTaiwanWang");
      if ((value & 20106) != 0) sbuf.append("|msoEncodingIA5German");
      if ((value & 20108) != 0) sbuf.append("|msoEncodingIA5Norwegian");
      if ((value & 20127) != 0) sbuf.append("|msoEncodingUSASCII");
      if ((value & 20866) != 0) sbuf.append("|msoEncodingKOI8R");
      if ((value & 21027) != 0) sbuf.append("|msoEncodingExtAlphaLowercase");
      if ((value & 21866) != 0) sbuf.append("|msoEncodingKOI8U");
      if ((value & 29001) != 0) sbuf.append("|msoEncodingEuropa3");
      if ((value & 52936) != 0) sbuf.append("|msoEncodingHZGBSimplifiedChinese");
      if ((value & 65000) != 0) sbuf.append("|msoEncodingUTF7");
      if ((value & 65001) != 0) sbuf.append("|msoEncodingUTF8");
      return sbuf.toString();
      }
    }
  }
}
